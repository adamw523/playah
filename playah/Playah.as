package playah {		import flash.media.Sound;	import flash.media.SoundChannel;	import flash.text.TextField;	import flash.external.ExternalInterface;	public class Playah {				public function Playah():void {			ExternalInterface.addCallback("dbg", this.dbg); 			ExternalInterface.addCallback("add", this.addSound); 			ExternalInterface.addCallback("playSound", this.playSound);			ExternalInterface.addCallback("playFromPosition", this.playSoundFromPosition);			ExternalInterface.addCallback("stopSound", this.stopSound);			ExternalInterface.addCallback("pause", this.pauseSound);			ExternalInterface.addCallback("pauseAll", this.pauseAllSounds);			ExternalInterface.addCallback("stopAll", this.stopAllSounds);			ExternalInterface.addCallback("updateSound", this.updateSound);			ExternalInterface.addCallback("setInstanceId", this.setInstanceId);			ExternalInterface.addCallback("getPlayerReady", this.getPlayerReady);			setPlayerReady();		}				var isReady:Boolean = false;		var instance_id:String;		var debug_text:TextField = null;		var soundFiles:Object = {};				public function setPlayerReady() {			isReady = true;			// ExternalInterface.call("Playah.set_flash_ready");		}				public function getPlayerReady() {			return isReady;		}				public function setInstanceId(id:String) {			instance_id = id;		}				public function soundFilesObj():Object {			return soundFiles;		}		// Set debug_text to be used for debugging		public function setDbgTextField(txtF:TextField) {			debug_text = txtF;		}				// Append debug text 		public function dbg(str) {			if(debug_text) {				debug_text.text = debug_text.text + "\n" + str;			}		}				public function addSound(key:String, url:String) {			if(!soundFiles[key]) {								var snd:SoundFile = new SoundFile(key, 												  url, 												  function() {soundLoaded(key)},												  function() {sendToJS(key, "sound_complete");},												  function() {updateSoundOjbect(key);});						soundFiles[key] = snd;				updateSoundOjbect(key);			}		}				public function updateSound(key:String) {			updateSoundOjbect(key);		}			private function soundLoaded(key:String):void {			updateSound(key);			sendToJS(key, "sound_loaded");		}				private function updateSoundOjbect(key:String):void {			var json : String = '{';			json += '"instance_id": ' + instance_id;			json += ', "key": "' + key + '"';			json += ', "snd": ' + soundFiles[key].toJson();			json += '}';			ExternalInterface.call("Playah.flash_receiver_dispatcher", "sound_updated", json);		}		private function sendToJS(key:String, method:String):void {			var json : String = '{';			json += '"instance_id": ' + instance_id;			json += ', "key": "' + key + '"';			json += '}';			ExternalInterface.call("Playah.flash_receiver_dispatcher", method, json);		}		public function playSound(key:String) {			soundFiles[key].play();			updateSound(key);		}		public function playSoundFromPosition(key:String, position:Number) {			soundFiles[key].playFromPosition(position);			updateSound(key);		}			public function stopSound(key:String) {			soundFiles[key].stop();			updateSound(key);		}				public function pauseSound(key:String) {			soundFiles[key].pause();			updateSound(key);		}				public function stopAllSounds() {			for( key in soundFiles ) {				soundFiles[key].stop();				updateSound(key);			}		}			public function pauseAllSounds() {			for( key in soundFiles ) {				soundFiles[key].pause();				updateSound(key);			}		}	}}